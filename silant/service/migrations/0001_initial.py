# Generated by Django 5.0.4 on 2024-04-13 12:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('references', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_number', models.CharField(max_length=128, unique=True, verbose_name='Заводской номер')),
                ('engine_serial_number', models.CharField(max_length=128, verbose_name='Зав. № двигателя')),
                ('transmission_serial_numbers', models.CharField(max_length=128, verbose_name='Зав. № трансмиссии')),
                ('factory_number_drive_bridge', models.CharField(max_length=128, verbose_name='Зав. № ведущего моста')),
                ('factory_number_controlled_bridge', models.CharField(max_length=128, verbose_name='Зав. № управляемого моста')),
                ('delivery_agreement', models.TextField(blank=True, null=True, verbose_name='Договор поставки №, дата')),
                ('factory_shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('consignee', models.TextField(verbose_name='Грузополучатель')),
                ('delivery_address', models.TextField(verbose_name='Адрес поставки')),
                ('equipment', models.TextField(verbose_name='Комплектация (доп. опции)')),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='accounts.profile', verbose_name='Клиент')),
                ('controlled_bridge_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.controlledbridgemodel', verbose_name='Модель управляемого моста')),
                ('engine_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.enginemodel', verbose_name='Модель двигателя')),
                ('model_drive_bridge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.modeldrivebridge', verbose_name='Модель ведущего моста')),
                ('model_technique', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.modeltechnique', verbose_name='Модель техники')),
                ('service_company', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='references.servicecompany', verbose_name='Сервисная компания')),
                ('transmission_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.transmissionmodel', verbose_name='Модель трансмиссии')),
            ],
            options={
                'verbose_name': 'Машины',
                'verbose_name_plural': 'Машины',
            },
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_refusal', models.DateField(verbose_name='Дата отказа')),
                ('operating_time', models.IntegerField(default=0, verbose_name='Наработка, м/час')),
                ('description_failure', models.TextField(verbose_name='\tОписание отказа')),
                ('list_spare_parts', models.TextField(verbose_name='Используемые запасные части')),
                ('date_restoration', models.DateField(blank=True, null=True, verbose_name='Дата восстановления')),
                ('equipment_downtime', models.IntegerField(blank=True, null=True, verbose_name='Время простоя техники')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='service.car', verbose_name='Mашина')),
                ('failure_node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.failurenode', verbose_name='Узел отказа')),
                ('recovery_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.recoverymethod', verbose_name='Способ восстановления')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.servicecompany', verbose_name='Cервисная компания')),
            ],
            options={
                'verbose_name': 'Рекламации',
                'verbose_name_plural': 'Рекламации',
            },
        ),
        migrations.CreateModel(
            name='TechnicalMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_event', models.DateField(verbose_name='Дата проведения ТО')),
                ('operating_time', models.IntegerField(default=0, verbose_name='Наработка, м/час')),
                ('order_number', models.CharField(max_length=128, verbose_name='№ заказ-наряда')),
                ('date_order', models.DateField(verbose_name='Дата заказ-наряда')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='service.car', verbose_name='Машина')),
                ('organization_maintenance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.organizationmaintenance', verbose_name='Организация, проводившая ТО')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.servicecompany', verbose_name='Сервисная компания')),
                ('type_maintenance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='references.typemaintenance', verbose_name='Вид ТО')),
            ],
            options={
                'verbose_name': 'Техническое обслуживание',
                'verbose_name_plural': 'Техническое обслуживание',
            },
        ),
    ]
